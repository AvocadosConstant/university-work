Tim Hung
CS471 Assignment 2

   1)
    <expr>      ::= <term> + <expr>
                  | <term>
    <term>      ::= <factor> * <term>
                  | <factor>
    <factor>    ::= ( <expr> )
                  | <number>
    <number>    ::= NUMBER

    In this grammar, the production rules are all right recursive.
    Plus and multiply are both right-associative in this grammar.

   2)
    <expr>      ::= <sub> + <expr>
                  | <sub>
    <sub>       ::= <term> - <sub>
                  | <term>
    <term>      ::= <avg> * <term>
                  | <avg>
    <avg>       ::= <factor> @ <avg>
                  | <factor>
    <factor>    ::= ( <expr> )
                  | <number>
    <number>    ::= NUMBER

   3)
        <expr>
        <sub> + <expr>
        <term> + <expr>
        <avg> + <expr>
        <factor> + <expr>
        <number> + <expr>
        1 + <expr>
        1 + <sub>
        1 + <term> - <sub>
        1 + <avg> - <sub>
        1 + <factor> - <sub>
        1 + <number> - <sub>
        1 + 2 - <sub>
        1 + 2 - <term>
        1 + 2 - <avg>
        1 + 2 - <factor>
        1 + 2 - <number>
        1 + 2 - 2

        <expr>
        <sub>
        <term> - <sub>
        <avg> - <sub>
        <factor> - <sub>
        <number> - <sub>
        2 - <sub>
        2 - <term>
        2 - <avg> * <term>
        2 - <factor> * <term>
        2 - <number> * <term>
        2 - 3 * <term>
        2 - 3 * <avg>
        2 - 3 * <factor>
        2 - 3 * <number>
        2 - 3 * 5

        <expr>
        <sub>
        <term> - <sub>
        <avg> - <sub>
        <factor> - <sub>
        <number> - <sub>
        10 - <sub>
        10 - <term>
        10 - <avg>
        10 - <factor> @ <avg>
        10 - <number> @ <avg>
        10 - 5 @ <avg>
        10 - 5 @ <factor>
        10 - 5 @ <number>
        10 - 5 @ 2


        <expr>
        <sub>
        <term> - <sub>
        <avg> - <sub>
        <factor> - <sub>
        <number> - <sub>
        10 - <sub>
        10 - <term> - <sub>
        10 - <avg> - <sub>
        10 - <factor> - <sub>
        10 - <number> - <sub>
        10 - 7 - <sub>
        10 - 7 - <term>
        10 - 7 - <avg>
        10 - 7 - <factor>
        10 - 7 - <number>
        10 - 7 - 2

   4)
        Code modified in ./arith1.c

   5)

        
   6)
   7)
   8)
   9)
  10)
  12)
  13)
